This files describes steps required for installing the plane wave migration package
called pwmig.   

1.  Decide where you want to put the top level directory for this package.
The default is /opt/pwmig/XXX where XXX is a version number tag.  This should
normally be in the user who will maintain this package's account and owned by 
a regular user.   I do not recommend this package be installed as root.  If
other people need to use the package, make sure the directory you choose for the
installation is readable by others.  You need to first create the install
directory.   

2.  Edit the file setup/setup.csh point to the top level directory 
described in 1.   This requires setting one internal variable in
setup.csh.   The default line is this:
set BASE=/opt/pwmig
Edit this to point to your install location.  For example, here is
what I used for the HPC machine called Karst at Indiana University.
set BASE=/N/u/pavlis/Karst/PWMIG

3.  In the setup directory copy either pwmigmakefile.macos or 
pwmigmakefile.linux to pwmigmakefile (i.e. without the .ext).  
This will become the master setup file used for running make.
This file was derived from the antelope file called antelopemake
and is used in a comparable build system with make.

4.  In the setup directory run 

source setup.csh
make

This will create the directories required by the package and copy some
basic setup files.  

5.  This package has a mixed dependency on the antelope software 
package supported commercially by Boulder Real Time Technologies
(www.brtt.com).  Many programs in the package will not work without
it.   However, because the core programs in the package (pwstack
pwmig, and gridstacker) faced issues in being portable to a wide
range of computing platforms they have been modified to work
without antelope libraries.  The rest of this document focuses on
how to build libraries and the core pwmig programs.   Programs
with antelope dependencies should be built as if they were part
of the antelope contrib directory chain (see documentation at
http://antelopeusersgroup.org).  

Building the core pwmig programs:

1)   You need to first download the current version of the
antelope contrib library from http://www.antelopeusersgroup.org.
Use either the git clone method described there or download
the latest tarball.  Chose a convenient place to put the 
contrib source code.  If you will be using antelope the
standard place is $ANTELOPE/src.   Otherwise I would recommend
something like ~/src.

2) Set the environment variable ANTELOPE_CONTRIB to the 
top of the contrib source code tree.  
For example (csh):  setenv ANTELOPE_CONTRIB $ANTELOPE/src/contrib

would use the standard for sites with antelope.

3)  You will need to manually transfer selected files from 
antelope contrib to your PWMIG work area.   Shells scripts are
found in two directories to do this.  Assuming the current directory
is the same as that where this file is found type this set of 
commands to build the required antelope libraries:

cd antelope/antelope_contrib/libgclgrid
./copy_libgclgrid_files
cd ../libseispp
./copy_libseispp_files
cd ../libseispp.ext
./copy_libseispp_ext_files
cd ../libperf
./copy_libperf_files

4) Installing this package requires mixing C and C++ include files
found in both antelope contrib and some components of antelope I converted
from the original open source version of datascope.  This complicates
the build process because we have to install all of the include files
first before we compile anything.  Assuming you ran the "source setup.csh"
command earlier this sequence of commands should do that:

Return to the top level directory for this repository (the one
where this file is located) and type:
cd antelope/dsap_conversion
make Include
cd $PWMIG/antelope_src
make Include


