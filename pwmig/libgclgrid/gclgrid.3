.\" %W% %G%
.TH GCLGRID 3  "%G%"
.SH NAME
GCLGRID - Geographic CurviLinear GRID library
.SH SYNOPSIS
.nf
#include "gclgrid.h"
double ***create_3dgrid_contiguous(int n1, int n2, int n3);
double **create_2dgrid_contiguous(int n1, int n2);
GCL3Dgrid *GCL3Dgrid_load_db(Dbptr db,char *gridname);
GCL2Dgrid *GCL2Dgrid_load_db(Dbptr db,char *gridname);
int save_3dgclgrid(GCL3Dgrid *g,Dbptr db,char *dir);
int save_2dgclgrid(GCL2Dgrid *g,Dbptr db,char *dir);
void free_3dgrid_contiguous(double ***x,int n1, int n2);
void free_2dgrid_contiguous(double **x,int n1);
int GCL3Dgrid_index_lookup(GCL3Dgrid *g, double x, double y, double z, 
        int *ix, int *iy, int *iz);
int GCL3Dgrid_interpolate(double *xp,GCL3Dgrid *g,int i, int j, int k, 
        double ****fg, double *f, int nf);
int map_full_grid(GCL3Dgrid *gin,double ****fin,
	GCL3Dgrid *gout,double ****fout,
        int nv, int ***hit);
void GCL3D_grid_stack(double ***in, double ***sum, 
	int ***hit, int ***hitsum,
        int n1, int n2, int n3);
double r0_ellipse(double lat);
double r_to_depth(double r, double lat);
.fi
.SH DESCRIPTION
.LP
Describing features of the earth at regional (hundreds to thousands
of kilometers) scale often requires a grid scheme that is like 
a latitude-longitude grid (e.g. 1 degree squares) but is not 
necessarily aligned with the geographic reference.  


This library is an attempt at a fairly general, but restricted
gridding scheme for defining 2D or 3D functions that
are defined on a spherical earth.  The concepts behind the
library are described in a paper in preparation and a poster
by Fan and Pavlis [2002] presented at the fall 2002 AGU meeting.
Consult the Antelope User Group Web pages for updates of these
sources (http://www.indiana.edu/~aug).  The man page will not 
attempt to describe the concepts but will focus on 
documenting the C interface
functions to the library.

The GCL2Dgrid and GCL3Dgrid are complex data objects defined
with a typedef found in the include file gclgrid.h.  Since 
both involve 2 or 3D arrays they can easily get huge.  

Regional scale data processing problems often involve 
#
# Here you put the complete description. Use .SS for subsections, .LP
# for paragraphs.
# The names of programs and command options must be in bold. 
# The names of parameters and arguments should be in italics.
#
.SH OPTIONS
#
# Options in bold. Describe options from \fBSYNOPSYS\fR above in fully
# indented paragraphs, preceded by the option.
#
.SH FILES
#
# Describe input and output files (but not down to bits).
#
.SH ENVIRONMENT
#
# Describe any special environment variables
#
.SH PARAMETER FILE
#
# Describe any parameter file
#
.SH EXAMPLE
#
# This section should contain an example that the user can follow
# verbatim.  For a command, this should show a sample command line and output.
# Use the same fonts as in \fBSYNOPSIS\fR. What the user types in should
# be bold, and program response or output should be roman. All commands 
# should be preceded by a representative UNIX prompt.
#
# For a library, you might show an example program (This is usually only 
# done for more complex routines or packages.)
#
.ft CW
.in 2c
.nf
.fi
.in
.ft R
.SH RETURN VALUES
#
# Describe the return values for each subroutine or command.  The usual
# is to return 0 for normal execution and something else for errors.
#
.SH LIBRARY
#
# Indicate the libraries which need to be linked in (for library routines only)
# in the form of the ldlibs Makefile line, eg "-ldb -lstock -lm"
#
.SH ATTRIBUTES
MT-Safe ?
.SH DIAGNOSTICS
#
# Describe error messages and give cautionary advice.
.SH "SEE ALSO"
.nf
Look for the C++ man page as it evolves.
.fi
.SH "BUGS AND CAVEATS"
This C interface was the original development for the concepts of 
this library.  Be aware that it is being depricated almost as soon
as it is added in favor of a C++ implementation.  
.SH AUTHOR
Gary L. Pavlis and Chengliang Fan, Department of Geological Sciences,
Indiana University, Bloomington, IN  47405 
(pavlis@indiana.edu, cfan@indiana.edu)
.\" $Id: gclgrid.3,v 1.2 2002/12/30 05:13:54 pavlis Exp $
