# extension tables to css3.0 for p to s conversion software by 
# Pavlis and students.  This is an extension and should always
# be used with a db descriptor that defines the concatenation 
# of this file to css3.0
Include css3.0
Attribute attwfid
        Integer (8)
        Format ( "%8d" )
        Null ( "-1" )
        Range ( "wfid > 0" )
        Description ( "Attribute waveform id" )
        Detail {
		The SEISPP library allows an auxiliary waveform to 
		modulate another waveform as an attribute time series
		object.  Attribute data are stored as time series in
		waveform the wfprocess table that uses a simple integer
		key to index each waveform.  This attribute is used to
		tag an attribute waveform and link it to a data trace.
        }
        ;

Attribute pwfid
        Integer (8)
        Format ( "%8d" )
        Null ( "-1" )
        Range ( "wfid > 0" )
        Description ( "processed waveform id" )
        Detail {
		Comparable to wfid used in wfdisc, but this integer
		key is the primary index of the core processing waveform
		table and is used for association and joining of 
		ancillary tables created by all processing algorithms
		that use this schema.  
        }
        ;

Attribute timetype
	String (1)
	Format ("%-1s" )
        Null ( "-" )
        Range ( "timetype =~ /a|r/" )
	Description ( "Flag or absolute or relative time")
	Detail {
		Processed waveforms treat time in the time series by
		one of two different standards. They assume either 
		times are all relative to some algorithm specific
		time reference, or the time is based on an absolute
		time standard (norm for raw data in seismology).  
		When this attribute is "a" it the time is assumed
		absolute while "r" denotes a relative time scale.
		In the later case it is up to the application to 
		maintain the time reference.
	}
	;

Attribute ux
	Real (10)
	Format ( "%10.7lf" )
	Null ( "999.0" )
	Range ( "ux>-1.0 && ux<1.0" )
	Units ("s/km")
	Description ( "EW component of slowness vector" )
	Detail {
		Slowness vectors are sometimes better respresented
		in terms of components in a local coordinate system.
		This is the ux or east-west direction component.
	}
	;

Attribute uy
	Real (10)
	Format ( "%10.7lf" )
	Null ( "999.0" )
	Range ( "uy>-1.0 && uy<1.0" )
	Units ("s/km")
	Description ( "NS component of slowness vector" )
	Detail {
		Slowness vectors are sometimes better respresented
		in terms of components in a local coordinate system.
		This is the uy or north-south direction component.
	}
	;

Attribute ux0
	Real (10)
	Format ( "%10.7lf" )
	Null ( "999.0" )
	Range ( "ux0>-1.0 && ux0<1.0" )
	Units ("s/km")
	Description ( "EW component of slowness vector of incident wave" )
	Detail {
		In the plane wave migration method we have to keep
		track of both the incident wave slowness vector 
		and the slowness of the stack.  This is the EW 
		component for the incident wave.
	}
	;

Attribute uy0
	Real (10)
	Format ( "%10.7lf" )
	Null ( "999.0" )
	Range ( "uy0>-1.0 && uy0<1.0" )
	Units ("s/km")
	Description ( "EW component of slowness vector of incident wave" )
	Detail {
		In the plane wave migration method we have to keep
		track of both the incident wave slowness vector 
		and the slowness of the stack.  This is the EW 
		component for the incident wave.
	}
	;

Attribute ix1
        Integer (4)
        Format ( "%4d")
        Null ("-1")
        Range ( "i0 >= 0" )
        Description ( "pseudostation index position for grid coordinate 1" )
        Detail {
		In pwstack we use a GCLgrid to define the locations of 
		pseudostations.  A location in the parent grid is defined
		by an integer index position.  This is the index for
		the first index position = grid coordinate 1.
        }
        ;

Attribute ix2
        Integer (4)
        Format ( "%4d")
        Null ("-1")
        Range ( "i0 >= 0" )
        Description ( "pseudostation index position for grid coordinate 2" )
        Detail {
		In pwstack we use a GCLgrid to define the locations of 
		pseudostations.  A location in the parent grid is defined
		by an integer index position.  This is the index for
		the second index position = grid coordinate 2.
        }
        ;

#
#  These are copied from genloc1.1 and are needed to support a 
#  gclgrid stored in a db
#

Attribute gridname
	String (15)
        Format ( "%-15s" )
        Null ( "-" )
        Description ( "Name attached to a coordinate grid mesh" )
        Detail {
                Several contexts require geographical 2d or 3d 
		grids.  This attribute ties a name to a name to 
		a grid that is a useful key for many tables defining
		such an entity.
        }
        ;

Attribute fieldname
	String (15)
        Format ( "%-15s" )
        Null ( "-" )
        Description ( "Name attached to a gclfield" )
        Detail {
                Several contexts require geographical 2d or 3d 
		grids.  We call some physical quantity tied to 
		a GCLgrid a field.  This attribute defines the name
		attached to that field quantity.
        }
        ;

Attribute gridid
        Integer (8)
        Format ( "%8d" )
        Null ( "-1" )
        Range ( "gridid > 0" )
        Description ( "grid id index" )
        Detail {
		Spatial grids are conveniently indexed with a single
		integer.  This allows the structure of the grid to be
		defined as desired.  This index is also a convenient
		key if the grid is defined in a database table instead
		of being stored on disk.
        }
        ;

Attribute radius
	Real (10)
	Format ( "%10.3f" )
	Null ( "-1.0" )
	Range ( "radius > 0.0" )
	Units ( "Kilometers" )
	Description ( "radius of a spherical surface" )
	Detail {
		The earth is approximately spherical and large scale
		imaging requires spherical shaped objects.  Radius is
		a base parameter to describe location of a point in
		the earth when spherical coordinates are used.
	}
	;

Attribute dx1nom
	Real (7)
        Format ( "%7.2lf" )
        Null ( "-1.00" )
	Range ( "dx1nom > 0.0" )
	Units ( "Kilometers" )
	Description ( "Nominal grid spacing in x1 direction" )
	Detail {
		This and two related attributes define the nominal 
		grid spacing of a geographical curvilinear grid coordinate
		definition file.  Because the mapping is not required to
		be uniform this is only a nominal value, not the actual
		grid spacing. 
	}
	;

Attribute dx2nom
	Real (7)
        Format ( "%7.2lf" )
        Null ( "-1.00" )
	Range ( "dx2nom > 0.0" )
	Units ( "Kilometers" )
	Description ( "Nominal grid spacing in x2 direction" )
	Detail {
		This and two related attributes define the nominal 
		grid spacing of a geographical curvilinear grid coordinate
		definition file.  Because the mapping is not required to
		be uniform this is only a nominal value, not the actual
		grid spacing. 
	}
	;

Attribute dx3nom
	Real (7)
        Format ( "%7.2lf" )
        Null ( "-1.00" )
	Range ( "dx3nom > 0.0" )
	Units ( "Kilometers" )
	Description ( "Nominal grid spacing in x3 direction" )
	Detail {
		This and two related attributes define the nominal 
		grid spacing of a geographical curvilinear grid coordinate
		definition file.  Because the mapping is not required to
		be uniform this is only a nominal value, not the actual
		grid spacing. 
	}
	;

Attribute azimuth_y
        Real (7)
        Format ( "%7.2lf" )
        Null ( "-1.00" )
        Range ( "azimuth_y >= 0.0 && azimuth_y < 360.0" )
        Units ( "Degrees" )
        Description ( "Azimuth of y axis at coordinate origin" )
        Detail {
		In geographical curvilinear coordinates this is the
		trajectory of the y Cartesian axis at the origin of
		the coordinate system.  The x axis is always assumed
		to be 90 degrees away and z is assumed up.  This
		uniquely defines the origin and orientation of
		the Cartesian system when combined with the 
		origin definition parameters.
        }
        ;

Attribute dimensions
	Integer (3)
	Format ( "%3d" )
	Null ("0")
	Range ( "dimensions > 0" )
	Description ("Number of dimensions" )
	Detail {
		Graphical objects multidimensional.  This parameter
		defines the number of dimensions in the object.  
		It is normally 2 or 3.
	}
	;

Attribute n1
	Integer (4)
	Format ( "%4d")
	Null ("-1")
	Range ( "n1 >= 0" )
	Description ( "Number of grid cells in dimension 1" )
	Detail {
		Geographical curvilinear grids are defined by 
		3d arrays with n1 points for dimension 1 
		n2 points for dimension 2 and n3 points for dimension 3.
	}
	;

Attribute n2
	Integer (4)
	Format ( "%4d")
	Null ("-1")
	Range ( "n2 >= 0" )
	Description ( "Number of grid cells in dimension 2" )
	Detail {
		Geographical curvilinear grids are defined by 
		3d arrays with n1 points for dimension 1 
		n2 points for dimension 2 and n3 points for dimension 3.
	}
	;

Attribute n3
	Integer (4)
	Format ( "%4d")
	Null ("-1")
	Range ( "n3 >= 0" )
	Description ( "Number of grid cells in dimension 3" )
	Detail {
		Geographical curvilinear grids are defined by 
		3d arrays with n1 points for dimension 1 
		n2 points for dimension 2 and n3 points for dimension 3.
	}
	;

Attribute nv
	Integer (4)
	Format ( "%4d")
	Null ("-1")
	Range ( "nv >= 0" )
	Description ( "Number of elements in a vector" )
	Detail {
		Geographical curvilinear grids define vector field
		objects.  This defines the number of components of
		vectors stored in a vector field.
	}
	;

Attribute xlow
	Real (10)
        Format ( "%10.3lf" )
	Units ( "Kilometers" )
	Description ( "minimum grid extent in the x direction" )
	Detail {
		Geographic curvilinear grids define a mapping
		of ordered groups of points onto Cartesian and/or 
		geographical coordinaes.  xlow, xhigh, ylow, yhigh,
		and zlow, zhigh define a bounding box for the 
		fully defined grid in the Cartesian system.  
		These are useful to quickly reject points outside the grid.
	}
	;

Attribute xhigh
	Real (10)
        Format ( "%10.3lf" )
	Units ( "Kilometers" )
	Description ( "maximum grid extent in the x direction" )
	Detail {
		Geographic curvilinear grids define a mapping
		of ordered groups of points onto Cartesian and/or 
		geographical coordinaes.  xlow, xhigh, ylow, yhigh,
		and zlow, zhigh define a bounding box for the 
		fully defined grid in the Cartesian system.  
		These are useful to quickly reject points outside the grid.
	}
	;

Attribute ylow
	Real (10)
        Format ( "%10.3lf" )
	Units ( "Kilometers" )
	Description ( "minimum grid extent in the y direction" )
	Detail {
		Geographic curvilinear grids define a mapping
		of ordered groups of points onto Cartesian and/or 
		geographical coordinaes.  xlow, xhigh, ylow, yhigh,
		and zlow, zhigh define a bounding box for the 
		fully defined grid in the Cartesian system.  
		These are useful to quickly reject points outside the grid.
	}
	;

Attribute yhigh
	Real (10)
        Format ( "%10.3lf" )
	Units ( "Kilometers" )
	Description ( "maximum grid extent in the y direction" )
	Detail {
		Geographic curvilinear grids define a mapping
		of ordered groups of points onto Cartesian and/or 
		geographical coordinaes.  xlow, xhigh, ylow, yhigh,
		and zlow, zhigh define a bounding box for the 
		fully defined grid in the Cartesian system.  
		These are useful to quickly reject points outside the grid.
	}
	;

Attribute zlow
	Real (10)
        Format ( "%10.3lf" )
	Units ( "Kilometers" )
	Description ( "minimum grid extent in the z direction" )
	Detail {
		Geographic curvilinear grids define a mapping
		of ordered groups of points onto Cartesian and/or 
		geographical coordinaes.  xlow, xhigh, ylow, yhigh,
		and zlow, zhigh define a bounding box for the 
		fully defined grid in the Cartesian system.  
		These are useful to quickly reject points outside the grid.
	}
	;

Attribute zhigh
	Real (10)
        Format ( "%10.3lf" )
	Units ( "Kilometers" )
	Description ( "maximum grid extent in the z direction" )
	Detail {
		Geographic curvilinear grids define a mapping
		of ordered groups of points onto Cartesian and/or 
		geographical coordinaes.  xlow, xhigh, ylow, yhigh,
		and zlow, zhigh define a bounding box for the 
		fully defined grid in the Cartesian system.  
		These are useful to quickly reject points outside the grid.
	}
	;

Attribute i0
        Integer (4)
        Format ( "%4d")
        Null ("-1")
        Range ( "i0 >= 0" )
        Description ( "index for dimension 1 of origin point" )
        Detail {
                Geographical curvilinear grids are defined by
                3d arrays with n1 points for dimension 1
                n2 points for dimension 2 and n3 points for dimension 3.
		i0, j0, and k0 define the location of the origin
		of the Cartesian coordinate system used in the mapping
		within the grid.  That is, a quanity like f[i0][j0][k0] 
		is at the origin.
        }
        ;

Attribute j0
        Integer (4)
        Format ( "%4d")
        Null ("-1")
        Range ( "j0 >= 0" )
        Description ( "index for dimension 2 of origin point" )
        Detail {
                Geographical curvilinear grids are defined by
                3d arrays with n1 points for dimension 1
                n2 points for dimension 2 and n3 points for dimension 3.
		i0, j0, and k0 define the location of the origin
		of the Cartesian coordinate system used in the mapping
		within the grid.  That is, a quanity like f[i0][j0][k0] 
		is at the origin.
        }
        ;

Attribute k0
        Integer (4)
        Format ( "%4d")
        Null ("-1")
        Range ( "i0 >= 0" )
        Description ( "index for dimension 3 of origin point" )
        Detail {
                Geographical curvilinear grids are defined by
                3d arrays with n1 points for dimension 1
                n2 points for dimension 2 and n3 points for dimension 3.
		i0, j0, and k0 define the location of the origin
		of the Cartesian coordinate system used in the mapping
		within the grid.  That is, a quanity like f[i0][j0][k0] 
		is at the origin.
        }
        ;

Attribute cdefined
	String (1)
        Format ( "%-1s" )
        Null ( "-" )
        Range ( "cdefined =~ /d|n/" )
        Description ( " Cartesian mapping = defining, non-defining" )
        Detail {
		Geographical curvilinear coordinates define mappings from
		3d arrays to a Cartesian and/or geographical coordinate
		system.  This parameter allows the option of turning
		off the Cartesian mapping and leaving it undefined.
		Be warned this may or may not be allowed in an 
		implementation that uses this. i.e. the "or" is
		not necessary a good thing.
	}
	;

Attribute geodefined
	String (1)
        Format ( "%-1s" )
        Null ( "-" )
        Range ( "geodefined =~ /d|n/" )
        Description ( " Cartesian mapping = defining, non-defining" )
        Detail {
		Geographical curvilinear coordinates define mappings from
		3d arrays to a Cartesian and/or geographical coordinate
		system.  This parameter allows the option of turning
		off the Geographical mapping and leaving it undefined.
		Be warned this may or may not be allowed in an 
		implementation that uses this. i.e. the "or" is
		not necessary a good thing.
	}
	;



Relation wfprocess
	Fields (
		pwfid time endtime timetype dir dfile foff datatype samprate nsamp algorithm lddate
	)
	Primary ( pwfid )
	Description ( "Core processed waveform table" )
	Detail {
		The antelope trace library is designed to work exclusively
		on data stored in memory.  Not all algorithms one can
		devise for seismic data can work in this mode even on the
		largest computers so a table is needed to store processed
		waveforms in an external database.  The intent of this
		design is that this table is the core table storing all
		intermediate trace data.  Any algorithm will almost 
		certainly create auxiliary tables that can be cross linked
		into this core table through the pwfid field.  In addition
		it would be normal to select as input only traces that 
		are the output of the algorithm field.  MpT
	}
	;
Relation rawwflink
	Fields ( pwfid wfid lddate )
	Primary ( pwfid wfid )
	Description ( "Link table between pwfdisc and wfdisc")
	Detail {
		The CSS3.0 schema wfdisc tables is designed for raw
		seismic data indexed by station:channel:time.  Many
		waveforms produced in intermediate processing are 
		not naturally indexed this way.  Raw waveforms are
		indexed with wfdisc while the later processed waveforms
		are indexed with pwfdisc.  This table links these two
		tables together using the integer keys for each.
	}
	;

Relation evlink
	Fields ( pwfid evid lddate )
	Primary ( pwfid evid )
	Description ( "Link table between wfprocess and catalog data")
	Detail {
		The CSS3.0 schema has a disconnect between waveforms
		and catalog (event location and pick) data.  This
		table can be used to link source information to processed
		waveform data.  
	}
	;


Relation attrlink
	Fields ( pwfid attwfid lddate )
	Primary ( pwfid attwfid )
	Description ( "Link table used to link related waveforms")
	Detail {
		This simple table is intended to link seismic time
		data with a related derived attribute time series.
		For example, we can compute coherence or semblance
		computed on a regular time grid
		and use the result as an overlay
		on the parent seismic traces.
	}
	;
#
# Can't use sta as a key here anticipating running this with
# in the future with multiple grids which would cause 
# problems.
#
Relation pwstack
	Fields ( gridname ix1 ix2 ux uy ux0 uy0 gridid pwfid sta chan elev lddate )
	Primary ( gridname ix1 ix2 ux uy )
	Foreign ( pwfid )
	Description ( "Special output table for pwstack program" )
	Detail {
		The pwstack program needs to define the slowness 
		vector and pseudostation position for each output
		trace.  This table provides this.  It is totally 
		specialized and not at all general.
	}
	;
#
#  copied from genloc1.1
#
Relation gclgdisk
	Fields (
		gridname dimensions 
		lat lon radius azimuth_y dx1nom dx2nom dx3nom
		n1 n2 n3 i0 j0 k0 xlow xhigh ylow yhigh zlow zhigh
		cdefined geodefined datatype dir dfile foff lddate
	)
	Primary ( gridname dimensions )
	Description ( "Geographical curvilinear coordinate grid file information" )
	Detail {
		This relation defines parameter information for geographical
		curvilinear grid files stored on disk.  2d and 3d grids 
		are indexed with the same table allowing a surface 2d
		grid to have the same base name as a 3d extension of it. 
	}
	;

Relation gclfield
	Fields (
		gridname fieldname dimensions 
		nv dir dfile foff lddate
	)
	Primary ( gridname fieldname )
	Description ( "GCLgrid field object attribute table" )
	Detail {
		This relation defines parameter information for data fields
		defined on GCLgrid objects.   This is used for an external 
		representation of these objects.
	}
	;
#
# from models0.4
#

Attribute modname
	String ( 20 )
	Format ( "%-20s" )
	Null ( "-" )
	Description ( "Name assigned to a physical earth model" )
	Detail {
		This is an id string used to assign a name to a physical
		earth model specified in related tables.
	}
	;

Attribute paramtype 
	String (20)
	Format ( "%-20s" )
	Null ( "-" )
	Description ( "Type of parameterization for a model" )
	Detail {
		Different models are parameterized in different ways. 
		This field specifies the type of parameterization for 
		a given model. Usually this will match a table name 
		giving the parameters for each specific model of that 
		parameterization type.
	}
	;

Attribute paramname 
	String (20)
	Format ( "%-20s" )
	Null ( "-" )
	Description ( "Name of a physical property" )
	Detail {
		Related tables store the values of physical properties
		of some kind (e.g. P or S wave velocity).  This is
		a unique string that describes the associated physical
		property.  Applications will define unique strings that
		can be used to grab the appropriate quantity. 
	}
	;

Attribute paramval 
	Real ( 20 )
	Format ( "%20.13g" )
	Null ( "9.9999999999999e99")
	Description ("Value of a physical parameter" )
	Detail {
		This field holds the actual value of a physical parameter
		used to describe an earth model.
	}
	;

Attribute grad
	Real ( 20 )
	Format ( "%20.13g" )
	Null ( "9.9999999999999e99")
	Description ("Vertical gradient" )
	Detail {
		Used to hold vertical gradient of a physical parameter
		for depth dependent (1D) earth models. 
	}
	;	

Relation mod1d
	Fields ( modname paramname depth paramval grad units auth lddate )
	Primary ( modname paramname depth )
	Description ( "Indexed 1-d earth model table " )
	Detail {
		Earth models that depend only on depth are stored in 
		this table.  The format allows infinite variety in the
		range of physical properties assigned to a series points
		that are specified here as (depth,paramval) ordered pairs.
	}
	;

