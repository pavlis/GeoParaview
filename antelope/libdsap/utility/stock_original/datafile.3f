'\" te


.\" $Name $Revision: 1.1.1.1 $ $Date: 1997/04/12 04:18:59 $
.TH DATAFILE 3F "$Date: 1997/04/12 04:18:59 $"
.SH NAME
datafile, datapath, newdata \- find program data file 
.SH SYNOPSIS
.nf
call datafile ( pathname, envname, filename ) 
call datapath ( pathname, envname, dirname, filename, suffix ) 
integer newdata ( pathname, envname, dirname, filename, suffix ) 
character *128 pathname, envname, dirname, filename, suffix 
.fi
.SH DESCRIPTION
Many programs need to open a private data file -- for
instance a font file, or a list of geographic
regions, or a travel-time table.  Since the program needs to 
always be able to find the file, the tendency is to 
compile an absolute path name into the program.
This is,  of course, very non-portable.
.LP
These routines attempt to provide a standard 
way of treating this problem.
Both attempt to find a datafile somewhere in the
standard location $DSAP/data.  \fBDatafile\fR looks
for the \fIfilename\fR, while \fBdatapath\fR concatenates
the \fIdirname\fR, \fIfilename\fR, and \fIsuffix\fR:
.nf

    \fIdirname\fR/\fIfilename\fR.\fIsuffix\fR
	
.fi
and looks for that file. 
\fIdirname\fR or \fIsuffix\fR may be null strings, in
which case they are ignored (along with the corresponding 
slash or dot separator). 
.LP
DSAP programs typically place their private
datafiles somewhere under $DSAP/data.
The caller of datafile provides two names to find
a datafile: 
.IP 1)
an environment variable name.
.IP 2)
a pathname relative to $DSAP
.LP
The routine first checks for the existence of the 
environment variable.
If the environment variable exists, its value is
inspected for the character colon (':').
If colons occur in the value, the value is
split into path elements; otherwise the entire
value is a single element.
.LP
Each element of the environment variable is
tested.  If an element points to a directory, 
then the \fIfilename\fR parameter is appended
and that path tested.  If this fails, 
and the \fIfilename\fR parameter includes the 
character slash ('/'), then the path formed
by concatenating the element and the basename
of the \fIfilename\fR parameter is tested.
.LP
If an element does not point to a directory, 
it may point to a file, and this is tested.
.LP
If all these tests fail, the environment variable 
"DSAP" is checked.  If no "DSAP" environment variable exists, 
"/sw" is used.
Then, "/data/" and the passed \fIfilename\fR
are appended, and resulting path is checked for
a readable file.
.LP
If any step above finds a readable file, that
pathname is returned in freshly allocated memory.  
Otherwise the routine
returns 0.
.LP
Newpath returns a filename constructed according to the
rules above, but expects that the named file will not exist.
It attempts to create any non-existent intermediate directories
on the returned path, and returns
.IP -1 
Either the directory path can't be constructed, or the complete
path is not writeable.
.IP 0
if the directory exists and is writeable, and no file of that
name exists.
.IP 1
The returned path already exists, but is writeable..SH ENVIRONMENT
The routine datafile checks for an environment variable
"DSAP", which is used to locate the "data" directory 
in which private data files are expected to be found.
.SH EXAMPLE
.nf
.fi
.SH RETURN VALUES
.SH LIBRARY
-lstock
.SH DIAGNOSTICS
none
.SH "SEE ALSO"
.nf
.fi
.SH "BUGS AND CAVEATS"
.SH AUTHOR
Daniel Quinlan

.\" $Id: datafile.3f,v 1.1.1.1 1997/04/12 04:18:59 danq Exp $ 
