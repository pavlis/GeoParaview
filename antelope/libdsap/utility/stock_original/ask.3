'\" te


.\" $Name $Revision: 1.1.1.1 $ $Date: 1997/04/12 04:18:59 $
.EQ
delim $$
.EN
.TH ASK 3 "$Date: 1997/04/12 04:18:59 $"
.SH NAME
ask, askyn \- get interactive response
.SH SYNOPSIS
.nf
char * ask ( printf-args );

int askyn ( printf-args );
.fi
.SH DESCRIPTION
These two routines query the user for a response.  \fBAskyn\fR requires
a "yes/no" type response, while \fBask\fR accepts any response (including
just a return).  Both open /dev/tty directly, and die if that fails.
Hence, they will not affect stdin, stdout, or stderr.
.SH EXAMPLE
.nf
    lemond% cat tryask.c
    #include "stock.h"

    main (argc, argv)
    int argc ; 
    char **argv ; 
    {
	char *name, *date ; 

	Program_Name = argv[0] ;

	while ( askyn ( "more? " ) ) 
	    {
	    name = ask ( "What is the name? " ) ; 
	    date = ask ( "What is %s's birthday? ", name ) ; 

	    printf ( "%s has a birthday %s\n", name, date ) ; 
	    }
	return 0 ; 
    }
    lemond% ./tryask < /dev/null
    ./tryask: more? y
    ./tryask: What is the name? George Washington
    ./tryask: What is George Washington's birthday? February 22
    George Washington has a birthday February 22
    ./tryask: more? n
    lemond%
.fi
.SH RETURN VALUES
\fBAsk\fR returns the response in a malloc'd character string.
\fBAskyn\fR returns 0 for no, 1 for yes.
.SH LIBRARY
-lstock
.SH DIAGNOSTICS
.IP "Can't open /dev/tty"
.SH "SEE ALSO"
.nf
.fi
.SH "BUGS AND CAVEATS"
These routines will cause a program to die if run from a background job
after the user has logged out.
.SH AUTHOR
Daniel Quinlan

.\" $Id: ask.3,v 1.1.1.1 1997/04/12 04:18:59 danq Exp $ 
