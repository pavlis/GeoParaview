.\" @(#)htond.3	1.4 2/10/97


.TH HTOND 3 "11/27/96"
.SH NAME
htond, ntohd, htonf, ntohf, rev4, rev8, isnetorder \- network/host byte re-ordering
.SH SYNOPSIS
.nf

#include "stock.h"

double htond ( double val )
double ntohd ( double val )

void htondp ( double *valp_from, double *valp_to )
void ntohdp ( double *valp_from, double *valp_to )

float htonf ( float val )
float ntohf ( float val )

void htonfp ( float *valp_from, float *valp_to )
void ntohfp ( float *valp_from, float *valp_to )

int rev4 ( char *from, char *to, int n )
int rev8 ( char *from, char *to, int n )

int isnetorder ()

.fi
.SH DESCRIPTION
These routines extend the functionality of the system \fBhtonl\fP, etc.
routines to reverse byte orders for double length words (8 bytes) and
for floats (4 bytes).

\fBhtond()\fP takes a host byte order double argument and returns a
net byte order double. \fBntohd()\fP takes a net byte order double argument and returns a
host byte order double. 
\fBhtonf()\fP takes a host byte order float argument and returns a
net byte order float. \fBntohf()\fP takes a net byte order float argument and returns a
host byte order float. 
\fBhtondp()\fP, \fBntohdp()\fP, \fBhtonfp()\fP and \fBntohf()\fP are pointer versions
of the above.
\fBrev4()\fP will byte reverse an array of \fBn\fP 4-byte words, 4 bytes
at a time. \fBrev8()\fP will byte reverse an array of \fBn\fP 8-byte words, 8 bytes
at a time. \fBisnetorder()\fP returns 1 if the host byte order is the same as
net byte order and 0 otherwise.

Note that no attempt is made to convert floats and doubles other than to
reverse byte orders.
.SH LIBRARY
-lstock
.SH DIAGNOSTICS
.SH "SEE ALSO"
.nf
ntohl(3)
.fi
.SH "BUGS AND CAVEATS"
.SH AUTHOR
Danny Harvey

.\" $Id: htond.3,v 1.1.1.1 1997/04/12 04:19:00 danq Exp $ 
