.\" $Name $Revision: 1.3 $ $Date: 1997/09/22 16:31:05 $

.\" Copyright (c) 1997 Boulder Real Time Technologies, Inc.           
.\"                                                                   
.\" This software module is wholly owned by Boulder Real Time         
.\" Technologies, Inc. Any use of this software module without        
.\" express written permission from Boulder Real Time Technologies,   
.\" Inc. is prohibited.                                               



.TH DUMP 3 "$Date: 1997/09/22 16:31:05 $"
.SH NAME
hexdump, asciidump, printable, read_hexdump, read_asciidump, hex2int \- read and write formatted ascii representation of binary buffers 
.SH SYNOPSIS
.nf

void hexdump ( FILE *file, void *memory, int l );
void asciidump ( FILE *file, char *memory, int l );
int printable ( char *memory, int l )

int hex2int ( char c );
void read_asciidump ( FILE *file, char *memory, int l );
void read_hexdump ( FILE *file, char *memory, int l );

.fi
.SH DESCRIPTION
These routines create and read formatted representations of binary
buffers.   \fBhexdump\fR writes a standard hexadecimal
dump of a memory buffer, showing both a hexadecimal and an ascii
representation.  \fBasciidump\fR writes an ascii representation, 
replacing non-printable characters with a hexadecimal escape;
eg, linefeed becomes "\0x0a".
.LP
printable tests bytes up to the first null byte
in a memory buffer, returning a positive integer  
if all are printable characters, and 0 otherwise.
.LP
read_hexdump and read_asciidump convert back from the ascii representations
to binary.  read_hexdump uses only the hexadecimal version 
of the representation when converting back.
.LP
hex2int returns the integer value of a hexadecimal character code --
ie, it returns 3 for the character '3', and 11 for the character 'b' or 'B'.
.SH LIBRARY
-lstock
.SH DIAGNOSTICS
.SH "SEE ALSO"
.nf
forb(5)
.fi
.SH "BUGS AND CAVEATS"
It's perhaps unfortunate that the read routines require a count
of bytes to fill.
.SH AUTHOR
Daniel Quinlan

.\" $Id: hexdump.3,v 1.3 1997/09/22 16:31:05 danq Exp $ 
